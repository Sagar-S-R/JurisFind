# Azure Pipelines YAML for FastAPI project
# CI/CD pipeline for building and deploying Docker container to Azure VM

trigger:
  branches:
    include:
    - main
  paths:
    include:
    - api/*

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: JurisFind-Variables
- name: dockerRegistryServiceConnection
  value: 'JurisFind-ACR-Connection'
- name: imageRepository
  value: 'jurisfind-api'
- name: containerRegistry
  value: 'jurisfindregistry.azurecr.io'
- name: dockerfilePath
  value: 'api/Dockerfile'
- name: tag
  value: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: 'Build and Push Docker Image'
  jobs:
  - job: Build
    displayName: 'Build'
    steps:
    - task: Docker@2
      displayName: 'Build Docker Image'
      inputs:
        command: 'build'
        Dockerfile: $(dockerfilePath)
        buildContext: $(Build.SourcesDirectory)
        repository: $(imageRepository)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: $(tag)
    - task: Docker@2
      displayName: 'Push Docker Image'
      inputs:
        command: 'push'
        repository: $(imageRepository)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: $(tag)

- stage: Deploy
  displayName: 'Deploy to Azure VM'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: 'Deploy to VM'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: |
              echo "Deploying to Azure VM..."
              
              # Login to ACR
              echo "Logging into ACR..."
              docker login $(containerRegistry) -u jurisfindregistry -p $(ACR_PASSWORD)
              
              # Stop and remove existing container
              echo "Stopping existing container..."
              docker stop jurisfind-api || true
              docker rm jurisfind-api || true
              
              # Pull latest image
              echo "Pulling latest image..."
              docker pull $(containerRegistry)/$(imageRepository):$(tag)
              
              # Run new container
              echo "Starting new container..."
              docker run -d --name jurisfind-api -p 80:8080 \
                -e AZURE_STORAGE_CONNECTION_STRING="$(AZURE_STORAGE_CONNECTION_STRING)" \
                -e AZURE_DATA_CONTAINER="data" \
                -e GROQ_API_KEY="$(GROQ_API_KEY)" \
                -e HOST="0.0.0.0" \
                -e PORT="8080" \
                --restart unless-stopped \
                $(containerRegistry)/$(imageRepository):$(tag)
              
              echo "Deployment completed!"
              docker ps | grep jurisfind-api
            displayName: 'Deploy Container to VM'